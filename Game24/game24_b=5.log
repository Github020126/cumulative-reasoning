{"puzzle": "4, 5, 6, 10", "try_cnt_branch_0": 1, "output": "5 * 6 - (10 - 4) ", "correct": true}
{"puzzle": "1, 2, 4, 7", "try_cnt_branch_0": 1, "output": "2 * ((4 + 7) + 1) ", "correct": true}
{"puzzle": "2, 5, 8, 11", "try_cnt_branch_0": 39, "output": "((11 - 5) / 2) * 8 ", "correct": true}
{"puzzle": "3, 4, 4, 13", "try_cnt_branch_0": 2, "output": "((13 - 3) - 4) * 4 ", "correct": true}
{"puzzle": "6, 7, 8, 9", "try_cnt_branch_0": 1, "output": "(6 / (9 - 7)) * 8 ", "correct": true}
{"puzzle": "1, 11, 11, 13", "try_cnt_branch_0": 5, "output": "((13 - 11) * (1 + 11)) ", "correct": true}
{"puzzle": "1, 8, 10, 11", "try_cnt_branch_0": 34, "output": "(10 - 8) * (11 + 1) ", "correct": true}
{"puzzle": "2, 3, 6, 9", "try_cnt_branch_0": 6, "output": "2 * 6 + (3 + 9) ", "correct": true}
{"puzzle": "1, 3, 5, 9", "try_cnt_branch_0": 1, "output": "1 * 9 + (3 * 5) ", "correct": true}
{"puzzle": "3, 3, 7, 12", "try_cnt_branch_0": 2, "output": "((7 - 3) * 3) + 12 ", "correct": true}
{"puzzle": "4, 5, 7, 9", "try_cnt_branch_0": 0, "output": "(7 - 4) * 5 + 9 ", "correct": true}
{"puzzle": "1, 2, 8, 13", "try_cnt_branch_0": 3, "output": "(1 + 2) + 8 + 13 ", "correct": true}
{"puzzle": "4, 6, 6, 9", "try_cnt_branch_0": 1, "output": "4 * 9 - (6 + 6) ", "correct": true}
{"puzzle": "1, 4, 4, 8", "try_cnt_branch_0": 0, "output": "1 * ((4 * 4) + 8) ", "correct": true}
{"puzzle": "1, 5, 10, 11", "try_cnt_branch_0": 6, "output": "(10 / 5) * (11 + 1) ", "correct": true}
{"puzzle": "3, 4, 6, 11", "try_cnt_branch_0": 3, "output": "((11 - 3) - 4) * 6 ", "correct": true}
{"puzzle": "2, 4, 8, 9", "try_cnt_branch_0": 12, "output": "((9 - 2) - 4) * 8 ", "correct": true}
{"puzzle": "1, 4, 5, 13", "try_cnt_branch_0": 7, "output": "(13 - 5) * (4 - 1) ", "correct": true}
{"puzzle": "2, 2, 7, 12", "try_cnt_branch_0": 34, "output": "2 * 7 + (12 - 2) ", "correct": true}
{"puzzle": "3, 3, 6, 7", "try_cnt_branch_0": 20, "output": "6 + (3 * 7 - 3) ", "correct": true}
{"puzzle": "1, 5, 9, 13", "try_cnt_branch_0": 39, "output": "(13 - 9) * (5 + 1) ", "correct": true}
{"puzzle": "5, 6, 7, 13", "try_cnt_branch_0": 0, "output": "5 * (13 - 7) - 6 ", "correct": true}
{"puzzle": "5, 5, 8, 10", "try_cnt_branch_0": 8, "output": "8 * (5 - (10 / 5)) ", "correct": true}
{"puzzle": "2, 4, 6, 12", "try_cnt_branch_0": 3, "output": "((2 * 4) - 6) * 12 ", "correct": true}
{"puzzle": "6, 7, 8, 11", "try_cnt_branch_0": 50, "try_cnt_branch_1": 0, "output": "6 * (8 - (11 - 7)) ", "correct": true}
{"puzzle": "7, 9, 9, 13", "try_cnt_branch_0": 3, "output": "(13 - 7) + 9 + 9 ", "correct": true}
{"puzzle": "3, 6, 9, 12", "try_cnt_branch_0": 2, "output": "(12 * (3 * 6)) / 9 ", "correct": true}
{"puzzle": "6, 9, 12, 13", "try_cnt_branch_0": 0, "output": "(13 - 9) * (12 - 6) ", "correct": true}
{"puzzle": "4, 7, 9, 13", "try_cnt_branch_0": 9, "output": "(4 * 7) - 13 + 9 ", "correct": true}
{"puzzle": "5, 6, 8, 12", "try_cnt_branch_0": 8, "output": "12 * (6 / (8 - 5)) ", "correct": true}
{"puzzle": "2, 4, 6, 7", "try_cnt_branch_0": 3, "output": "4 + 6 + (2 * 7) ", "correct": true}
{"puzzle": "2, 5, 10, 10", "try_cnt_branch_0": 5, "output": "(10 / 5) * (2 + 10) ", "correct": true}
{"puzzle": "6, 6, 7, 12", "try_cnt_branch_0": 11, "output": "(7 * 6) - 12 - 6 ", "correct": true}
{"puzzle": "6, 9, 9, 11", "try_cnt_branch_0": 50, "try_cnt_branch_1": 1, "output": "(9 - 6) * 11 - 9 ", "correct": true}
{"puzzle": "5, 8, 11, 12", "try_cnt_branch_0": 2, "output": "12 * (8 - (11 - 5)) ", "correct": true}
{"puzzle": "5, 6, 8, 10", "try_cnt_branch_0": 7, "output": "((5 * 6) / 10) * 8 ", "correct": true}
{"puzzle": "6, 11, 12, 13", "try_cnt_branch_0": 3, "output": "(13 - 11) * 6 + 12 ", "correct": true}
{"puzzle": "2, 2, 8, 8", "try_cnt_branch_0": 1, "output": "(2 * 2) * 8 - 8 ", "correct": true}
{"puzzle": "2, 7, 12, 13", "try_cnt_branch_0": 1, "output": "2 * (13 - 7) + 12 ", "correct": true}
{"puzzle": "2, 6, 8, 12", "try_cnt_branch_0": 1, "output": "6 + 8 + (12 - 2) ", "correct": true}
{"puzzle": "3, 4, 9, 13", "try_cnt_branch_0": 3, "output": "(13 - (9 - 4)) * 3 ", "correct": true}
{"puzzle": "4, 5, 10, 12", "try_cnt_branch_0": 2, "output": "4 * (12 / (10 / 5)) ", "correct": true}
{"puzzle": "1, 2, 7, 11", "try_cnt_branch_0": 6, "output": "(11 - 1) + (2 * 7) ", "correct": true}
{"puzzle": "4, 5, 6, 8", "try_cnt_branch_0": 17, "output": "((4 + 5) - 6) * 8 ", "correct": true}
{"puzzle": "6, 10, 12, 13", "try_cnt_branch_0": 4, "output": "(6 / (13 - 10)) * 12 ", "correct": true}
{"puzzle": "1, 3, 9, 9", "try_cnt_branch_0": 22, "output": "(9 / 3) * (9 - 1) ", "correct": true}
{"puzzle": "1, 4, 4, 11", "try_cnt_branch_0": 1, "output": "((11 - 1) - 4) * 4 ", "correct": true}
{"puzzle": "2, 3, 9, 10", "try_cnt_branch_0": 2, "try_cnt_branch_1": 8, "output": "2 + 10 + (3 + 9) ", "correct": true}
{"puzzle": "1, 2, 3, 13", "try_cnt_branch_0": 16, "output": "1 - 3 + (2 * 13) ", "correct": true}
{"puzzle": "1, 6, 6, 6", "try_cnt_branch_0": 7, "output": "(6 - 1) * 6 - 6 ", "correct": true}
{"puzzle": "1, 2, 2, 9", "try_cnt_branch_0": 10, "output": "2 * (9 + (1 + 2)) ", "correct": true}
{"puzzle": "1, 3, 6, 11", "try_cnt_branch_0": 5, "output": "(6 / 3) * (11 + 1) ", "correct": true}
{"puzzle": "5, 10, 12, 13", "try_cnt_branch_0": 17, "output": "(10 - (13 - 5)) * 12 ", "correct": true}
{"puzzle": "2, 3, 6, 6", "try_cnt_branch_0": 0, "output": "(2 + 3) * 6 - 6 ", "correct": true}
{"puzzle": "6, 7, 10, 12", "try_cnt_branch_0": 6, "output": "(12 / 6) * 7 + 10 ", "correct": true}
{"puzzle": "7, 8, 8, 12", "try_cnt_branch_0": 0, "output": "((12 - 7) - 8) * 8 ", "correct": false}
{"puzzle": "3, 4, 6, 8", "try_cnt_branch_0": 1, "output": "(3 * 4) * (8 - 6) ", "correct": true}
{"puzzle": "1, 7, 9, 11", "try_cnt_branch_0": 13, "output": "(9 - 7) * (11 + 1) ", "correct": true}
{"puzzle": "2, 3, 6, 13", "try_cnt_branch_0": 1, "output": "(2 + 3) + 6 + 13 ", "correct": true}
{"puzzle": "2, 2, 5, 12", "try_cnt_branch_0": 5, "output": "(2 * 5) + 2 + 12 ", "correct": true}
{"puzzle": "2, 6, 8, 13", "try_cnt_branch_0": 1, "output": "13 * 2 - (8 - 6) ", "correct": true}
{"puzzle": "8, 8, 10, 12", "try_cnt_branch_0": 50, "try_cnt_branch_1": 50, "try_cnt_branch_2": 50, "try_cnt_branch_3": 0, "output": "12 * (10 - 8) - 8 ", "correct": false}
{"puzzle": "1, 3, 8, 13", "try_cnt_branch_0": 43, "output": "1 * (8 + (13 + 3)) ", "correct": true}
{"puzzle": "4, 4, 7, 10", "try_cnt_branch_0": 2, "output": "(10 - 7) * (4 + 4) ", "correct": true}
{"puzzle": "1, 7, 10, 13", "try_cnt_branch_0": 0, "output": "(13 - 10) * (7 + 1) ", "correct": true}
{"puzzle": "1, 9, 10, 13", "try_cnt_branch_0": 50, "try_cnt_branch_1": 30, "output": "(9 - 1) * (13 - 10) ", "correct": true}
{"puzzle": "3, 3, 4, 11", "try_cnt_branch_0": 3, "output": "3 + (3 * (11 - 4)) ", "correct": true}
{"puzzle": "2, 5, 7, 7", "try_cnt_branch_0": 0, "output": "7 + 7 + (5 * 2) ", "correct": true}
{"puzzle": "3, 9, 10, 13", "try_cnt_branch_0": 4, "output": "9 * (13 - 10) - 3 ", "correct": true}
{"puzzle": "2, 3, 4, 7", "try_cnt_branch_0": 50, "try_cnt_branch_1": 5, "output": "4 * ((7 + 2) - 3) ", "correct": true}
{"puzzle": "4, 4, 8, 12", "try_cnt_branch_0": 0, "output": "(4 * 4) * 12 / 8 ", "correct": true}
{"puzzle": "1, 2, 6, 10", "try_cnt_branch_0": 4, "output": "6 * ((10 / 2) - 1) ", "correct": true}
{"puzzle": "1, 5, 12, 12", "try_cnt_branch_0": 50, "try_cnt_branch_1": 0, "output": "(12 * 12) / (1 + 5) ", "correct": true}
{"puzzle": "5, 6, 6, 8", "try_cnt_branch_0": 12, "output": "(8 - 5) * 6 + 6 ", "correct": true}
{"puzzle": "7, 7, 8, 11", "try_cnt_branch_0": 13, "output": "((7 + 7) - 11) * 8 ", "correct": true}
{"puzzle": "1, 3, 7, 10", "try_cnt_branch_0": 0, "output": "3 * 10 - (7 - 1) ", "correct": true}
{"puzzle": "3, 3, 9, 12", "try_cnt_branch_0": 0, "output": "(9 - 3) * (12 / 3) ", "correct": true}
{"puzzle": "3, 5, 7, 10", "try_cnt_branch_0": 0, "output": "(10 - 7) * (3 + 5) ", "correct": true}
{"puzzle": "4, 10, 12, 13", "try_cnt_branch_0": 3, "output": "(13 - 10) * 4 + 12 ", "correct": true}
{"puzzle": "2, 3, 10, 12", "try_cnt_branch_0": 10, "output": "((10 / 2) - 3) * 12 ", "correct": true}
{"puzzle": "3, 4, 6, 6", "try_cnt_branch_0": 4, "try_cnt_branch_1": 0, "output": "(6 + 6) + (3 * 4) ", "correct": true}
{"puzzle": "5, 8, 8, 8", "try_cnt_branch_0": 0, "output": "(8 * 8) - (5 * 8) ", "correct": true}
{"puzzle": "6, 8, 8, 12", "try_cnt_branch_0": 3, "try_cnt_branch_1": 25, "output": "8 + ((8 * 12) / 6) ", "correct": true}
{"puzzle": "2, 3, 4, 9", "try_cnt_branch_0": 20, "output": "(4 / 2) * (3 + 9) ", "correct": true}
{"puzzle": "2, 6, 7, 11", "try_cnt_branch_0": 50, "try_cnt_branch_1": 50, "try_cnt_branch_2": 3, "try_cnt_branch_3": 50, "try_cnt_branch_4": 8, "output": "2 * ((11 - 6) + 7) ", "correct": true}
{"puzzle": "5, 9, 12, 12", "try_cnt_branch_0": 0, "try_cnt_branch_1": 2, "output": "12 * (9 - (12 - 5)) ", "correct": true}
{"puzzle": "1, 2, 7, 12", "try_cnt_branch_0": 50, "try_cnt_branch_1": 0, "output": "2 * (7 - 1) + 12 ", "correct": true}
{"puzzle": "2, 4, 5, 6", "try_cnt_branch_0": 4, "output": "5 * (4 + 2) - 6 ", "correct": true}
{"puzzle": "5, 5, 8, 13", "try_cnt_branch_0": 4, "try_cnt_branch_1": 2, "output": "(8 - 5) * (13 - 5) ", "correct": true}
{"puzzle": "2, 3, 3, 10", "try_cnt_branch_0": 8, "output": "(3 * 10) - (3 * 2) ", "correct": true}
{"puzzle": "3, 4, 8, 12", "try_cnt_branch_0": 1, "output": "3 * (8 - 4) + 12 ", "correct": true}
{"puzzle": "2, 4, 6, 11", "try_cnt_branch_0": 50, "try_cnt_branch_1": 6, "output": "(6 - 4) + (2 * 11) ", "correct": true}
{"puzzle": "2, 2, 8, 9", "try_cnt_branch_0": 45, "output": "(2 * 9) - 2 + 8 ", "correct": true}
{"puzzle": "1, 5, 6, 7", "try_cnt_branch_0": 0, "output": "5 * (7 - 1) - 6 ", "correct": true}
{"puzzle": "5, 8, 10, 11", "try_cnt_branch_0": 0, "output": "(10 - 5) + 8 + 11 ", "correct": true}
{"puzzle": "4, 4, 9, 12", "try_cnt_branch_0": 4, "output": "(4 + 4) * (12 - 9) ", "correct": true}
{"puzzle": "2, 5, 6, 6", "try_cnt_branch_0": 4, "try_cnt_branch_1": 8, "output": "6 * ((2 * 5) - 6) ", "correct": true}
{"puzzle": "2, 4, 9, 12", "try_cnt_branch_0": 0, "output": "2 * (12 - 9) * 4 ", "correct": true}
{"puzzle": "4, 8, 11, 13", "try_cnt_branch_0": 2, "output": "(13 - 11) * (4 + 8) ", "correct": true}
{"puzzle": "4, 9, 10, 13", "try_cnt_branch_0": 2, "output": "(10 - (13 - 9)) * 4 ", "correct": true}
